Greška u prevođenju: .../analizator/Lexer.java:7: error: package analizator.generated does not exist
import analizator.generated.State;
                           ^
.../analizator/Lexer.java:8: error: package analizator.structures does not exist
import analizator.structures.LexUnit;
                            ^
.../analizator/Lexer.java:9: error: package analizator.structures does not exist
import analizator.structures.Rule;
                            ^
.../analizator/Lexer.java:10: error: package analizator.generated does not exist
import analizator.generated.Rules;
                           ^
.../analizator/Lexer.java:19: error: cannot find symbol
  private State activeState;
          ^
  symbol:   class State
  location: class Lexer
.../analizator/Lexer.java:26: error: cannot find symbol
  private Rule[] lastAccepted; 
          ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:28: error: cannot find symbol
  private Map<State, Rule[]> rules = Rules.getRules();
              ^
  symbol:   class State
  location: class Lexer
.../analizator/Lexer.java:28: error: cannot find symbol
  private Map<State, Rule[]> rules = Rules.getRules();
                     ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:30: error: cannot find symbol
  private ArrayList<LexUnit> lexUnits;
                    ^
  symbol:   class LexUnit
  location: class Lexer
.../analizator/Lexer.java:55: error: cannot find symbol
  public ArrayList<LexUnit> analyse() throws IOException{
                   ^
  symbol:   class LexUnit
  location: class Lexer
.../analizator/Lexer.java:132: error: cannot find symbol
  private void accept(Rule rule){
                      ^
  symbol:   class Rule
  location: class Lexer
.../analizator/LA.java:8: error: package analizator.structures does not exist
import analizator.structures.LexUnit;
                            ^
.../analizator/Lexer.java:28: error: cannot find symbol
  private Map<State, Rule[]> rules = Rules.getRules();
                                     ^
  symbol:   variable Rules
  location: class Lexer
.../analizator/Lexer.java:41: error: cannot find symbol
    activeState = State.S_pocetno;
                  ^
  symbol:   variable State
  location: class Lexer
.../analizator/Lexer.java:43: error: cannot find symbol
    lexUnits = new ArrayList<LexUnit>();
                             ^
  symbol:   class LexUnit
  location: class Lexer
.../analizator/Lexer.java:58: error: cannot find symbol
      ArrayList<Rule> accepts = new ArrayList<Rule>();
                ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:58: error: cannot find symbol
      ArrayList<Rule> accepts = new ArrayList<Rule>();
                                              ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:60: error: cannot find symbol
      for(Rule rule : rules.get(activeState)){
          ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:67: error: cannot find symbol
        lastAccepted = accepts.toArray(new Rule[0]);
                                           ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:78: error: cannot find symbol
        final Rule priorityRule = lastAccepted[0]; // because of ordering, first rule has highest priority
              ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:90: error: cannot find symbol
      final Rule priorityRule = lastAccepted[0]; // because of ordering, first rule has highest priority
            ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:154: error: cannot find symbol
      lexUnits.add(new LexUnit(rule.lexClass, this.lineNumber, lexUnitString));
                       ^
  symbol:   class LexUnit
  location: class Lexer
.../analizator/Lexer.java:157: error: illegal parenthesized expression
    if(rule.newLine){
      ^
.../analizator/Lexer.java:176: error: cannot find symbol
    lastAccepted = new Rule[0];
                       ^
  symbol:   class Rule
  location: class Lexer
.../analizator/Lexer.java:183: error: cannot find symbol
    for(Rule rule : rules.get(this.activeState)){
        ^
  symbol:   class Rule
  location: class Lexer
.../analizator/LA.java:19: error: cannot find symbol
    ArrayList<LexUnit> lexUnitList = lexer.analyse();
              ^
  symbol:   class LexUnit
  location: class LA
.../analizator/LA.java:21: error: cannot find symbol
    for(LexUnit lexUnit : lexUnitList){
        ^
  symbol:   class LexUnit
  location: class LA
27 errors